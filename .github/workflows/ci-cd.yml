name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:20.10.7  # Updated to a more recent version
        options: --privileged

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/healthcare_diagnosis_assistant_backend:latest

    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/healthcare_diagnosis_assistant_frontend:latest

    - name: Compose up
      run: |
        docker-compose -f docker-compose.yaml up -d

    - name: Wait for backend service to be ready
      run: |
        until curl -sSf http://0.0.0.0:8000 > /dev/null; do
          echo "Waiting for backend to be ready..."
          sleep 5
        done

    - name: Wait for frontend service to be ready
      run: |
        until curl -sSf http://0.0.0.0:3000 > /dev/null; do
          echo "Waiting for frontend to be ready..."
          sleep 5
        done

    - name: Run tests
      run: |
        docker-compose -f docker-compose.yaml run backend pytest
        docker-compose -f docker-compose.yaml run frontend npm test

    - name: Compose down
      run: |
        docker-compose -f docker-compose.yaml down

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install SSH client
      run: sudo apt-get install -y openssh-client

    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Copy files to EC2
      run: |
        scp -o StrictHostKeyChecking=no -r . ubuntu@your-ec2-public-ip:/home/ubuntu/app

    - name: Deploy on EC2
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@54.88.15.70 << 'EOF'
          cd /home/ubuntu/app
          docker-compose -f docker-compose.yaml pull
          docker-compose -f docker-compose.yaml up -d
        EOF
